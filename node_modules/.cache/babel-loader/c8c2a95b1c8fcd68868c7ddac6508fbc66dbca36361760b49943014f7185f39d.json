{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Test\\\\todo\\\\src\\\\Component\\\\AddDataInList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport '../Css/Drawer.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setListData, setCounter } from \"../Redux/Action\";\nimport DisplayTask from \"./DisplayTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDataInList(props) {\n  _s();\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.counter);\n  const listData = useSelector(state => state.iteam);\n  const [inputData, setInputData] = useState(\"\");\n  var deletedId = 0;\n  const handleAddIteam = event => {\n    var oldIteam = listData;\n    oldIteam.push({\n      id: count + 1,\n      value: inputData\n    });\n    dispatch(setListData(oldIteam));\n    dispatch(setCounter(count + 1));\n    setInputData(\"\");\n  };\n  const handleRemoveIteam = () => {\n    console.log(typeof deletedId);\n    listData.filter(x => console.log(typeof x.id));\n    var remaningList = listData.filter(x => x.id !== parseInt(deletedId));\n    console.log(remaningList);\n    dispatch(setListData(remaningList));\n    //dispatch(setCounter(count+1));\n    setInputData(\"\");\n  };\n  const handleInputChange = data => {\n    setInputData(data);\n  };\n\n  // const listIteam=()=>\n  // {\n  //     //let Iteams=useSelector(state=>state.iteam);\n  //     let listIteam=listData.map((e)=>\n  //     <li key={e.id}>{e.value}</li>\n  //     )\n  //         return(<ol>{listIteam}</ol>)\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => handleInputChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddIteam(),\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DisplayTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(AddDataInList, \"i8rMfmaK1MOMvtpcCqqMH7uR5vM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AddDataInList;\nexport default AddDataInList;\nvar _c;\n$RefreshReg$(_c, \"AddDataInList\");","map":{"version":3,"names":["useState","useSelector","useDispatch","setListData","setCounter","DisplayTask","AddDataInList","props","dispatch","count","state","counter","listData","iteam","inputData","setInputData","deletedId","handleAddIteam","event","oldIteam","push","id","value","handleRemoveIteam","console","log","filter","x","remaningList","parseInt","handleInputChange","data","name","e","target"],"sources":["C:/Users/Admin/Desktop/Test/todo/src/Component/AddDataInList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport '../Css/Drawer.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setListData,setCounter } from \"../Redux/Action\";\r\nimport DisplayTask  from \"./DisplayTask\";\r\nfunction AddDataInList(props)\r\n{\r\n    const dispatch=useDispatch();\r\n    const count=useSelector(state=>state.counter);\r\n    const listData=useSelector(state=>state.iteam);\r\n    const  [inputData,setInputData]=useState(\"\");\r\n    var deletedId=0\r\n\r\n    const handleAddIteam=(event)=>{\r\n    var oldIteam=listData;\r\n        oldIteam.push({id:count+1,value:inputData})\r\n        dispatch(setListData(oldIteam));\r\n        dispatch(setCounter(count+1));\r\n        setInputData(\"\");\r\n    }\r\n\r\n    const handleRemoveIteam=()=>{\r\n        console.log(typeof(deletedId));\r\n        listData.filter(x=>\r\n            console.log(typeof(x.id)),\r\n            );\r\n        var remaningList=\r\n        listData.filter(x=>\r\n            x.id!==parseInt(deletedId)\r\n            );\r\n            console.log(remaningList);\r\n            \r\n            dispatch(setListData(remaningList));\r\n            //dispatch(setCounter(count+1));\r\n            setInputData(\"\");\r\n        }\r\n    const handleInputChange=(data)=>{\r\n        setInputData(data);\r\n    }\r\n    \r\n\r\n    // const listIteam=()=>\r\n    // {\r\n    //     //let Iteams=useSelector(state=>state.iteam);\r\n    //     let listIteam=listData.map((e)=>\r\n    //     <li key={e.id}>{e.value}</li>\r\n    //     )\r\n    //         return(<ol>{listIteam}</ol>)\r\n    // }\r\n    return(\r\n        <>\r\n        <div className=\"addItem\">\r\n            <h3>{props.name}</h3>\r\n            <div className=\"inputContent\">\r\n                <input type=\"text\"onChange={(e)=>handleInputChange(e.target.value)}/>\r\n                <button  onClick={()=>handleAddIteam()}>Add Task</button>\r\n                \r\n            </div>\r\n            <div>\r\n                <DisplayTask/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddDataInList"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,mBAAmB;AAC1B,SAAQC,WAAW,EAACC,WAAW,QAAO,aAAa;AACnD,SAASC,WAAW,EAACC,UAAU,QAAQ,iBAAiB;AACxD,OAAOC,WAAW,MAAO,eAAe;AAAC;AAAA;AACzC,SAASC,aAAa,CAACC,KAAK,EAC5B;EAAA;EACI,MAAMC,QAAQ,GAACN,WAAW,EAAE;EAC5B,MAAMO,KAAK,GAACR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,OAAO,CAAC;EAC7C,MAAMC,QAAQ,GAACX,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACG,KAAK,CAAC;EAC9C,MAAO,CAACC,SAAS,EAACC,YAAY,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAIgB,SAAS,GAAC,CAAC;EAEf,MAAMC,cAAc,GAAEC,KAAK,IAAG;IAC9B,IAAIC,QAAQ,GAACP,QAAQ;IACjBO,QAAQ,CAACC,IAAI,CAAC;MAACC,EAAE,EAACZ,KAAK,GAAC,CAAC;MAACa,KAAK,EAACR;IAAS,CAAC,CAAC;IAC3CN,QAAQ,CAACL,WAAW,CAACgB,QAAQ,CAAC,CAAC;IAC/BX,QAAQ,CAACJ,UAAU,CAACK,KAAK,GAAC,CAAC,CAAC,CAAC;IAC7BM,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMQ,iBAAiB,GAAC,MAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,OAAOT,SAAU,CAAC;IAC9BJ,QAAQ,CAACc,MAAM,CAACC,CAAC,IACbH,OAAO,CAACC,GAAG,CAAC,OAAOE,CAAC,CAACN,EAAG,CAAC,CACxB;IACL,IAAIO,YAAY,GAChBhB,QAAQ,CAACc,MAAM,CAACC,CAAC,IACbA,CAAC,CAACN,EAAE,KAAGQ,QAAQ,CAACb,SAAS,CAAC,CACzB;IACDQ,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;IAEzBpB,QAAQ,CAACL,WAAW,CAACyB,YAAY,CAAC,CAAC;IACnC;IACAb,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EACL,MAAMe,iBAAiB,GAAEC,IAAI,IAAG;IAC5BhB,YAAY,CAACgB,IAAI,CAAC;EACtB,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACI;IAAA,uBACA;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAA,UAAKxB,KAAK,CAACyB;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACrB;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAO,IAAI,EAAC,MAAM;UAAA,QAAQ,EAAGC,CAAC,IAAGH,iBAAiB,CAACG,CAAC,CAACC,MAAM,CAACZ,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACrE;UAAS,OAAO,EAAE,MAAIL,cAAc,EAAG;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvD,eACN;QAAA,uBACI,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACH;AAEX;AAAC,GA3DQX,aAAa;EAAA,QAEHJ,WAAW,EACdD,WAAW,EACRA,WAAW;AAAA;AAAA,KAJrBK,aAAa;AA6DtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}